#!/bin/bash -e
#
# This script is executed in the post-installation phase
#
#   On Debian,
#       $1=configure : is set to 'configure' and if $2 is set, it is an upgrade
#

# Sets the default values for okapi variables used in this script
OKAPI_USER="okapi"
OKAPI_GROUP="okapi"
DATA_DIR="/var/lib/okapi"
CONF_DIR="/etc/folio/okapi"
LOG_DIR="/var/log/folio/okapi"
LIB_DIR="/usr/share/folio/okapi/lib"


# Source the default env file
OKAPI_ENV_FILE="/etc/default/okapi"
if [ -f "$OKAPI_ENV_FILE" ]; then
    . "$OKAPI_ENV_FILE"
fi

OKAPI_CONF_FILE="${CONF_DIR}/okapi.conf"

if [ -f "$OKAPI_CONF_FILE" ]; then
    . "$OKAPI_CONF_FILE"
else
    echo "Cannot locate okapi.conf"
    exit 2 
fi

# set storage according to okapi.conf; otherwise set to 'inmemory'
STORAGE="${storage:-inmemory}"

if [ "$STORAGE" = "postgres" ]; then
   PG_HOST="-Dpostgres_host=${postgres_host:-localhost}"
   PG_PORT="-Dpostgres_port=${postgres_port:-5432}"
   PG_USER="-Dpostgres_user=${postgres_user:-okapi}"
   PG_PASS="-Dpostgres_password=${postgres_password:-okapi25}"
   PG_DB="-Dpostgres_database=${postgres_database:-okapi}"
   PG_OPTS="-Dstorage=postgres $PG_HOST $PG_PORT $PG_USER $PG_PASS $PG_DB"
fi


IS_UPGRADE=false
DB_INIT=true

case "$1" in

    configure)
        # If $1=configure and $2 is set, this is an upgrade
        if [ "$2" ]; then
            IS_UPGRADE=true
        fi
    ;;
    abort-upgrade|abort-remove|abort-deconfigure)
    ;;

    *)
        echo "post install script called with unknown argument \`$1'" >&2
        exit 1
    ;;
esac


chown -R $OKAPI_USER:$OKAPI_GROUP $DATA_DIR
mkdir -p "$LOG_DIR"
chown -R $OKAPI_USER:$OKAPI_GROUP $LOG_DIR
chown -R root:$OKAPI_GROUP $CONF_DIR
chmod 0755 $CONF_DIR


if [ "$IS_UPGRADE" != "true" ]; then
    if [ "$STORAGE" = "postgres" ]; then
       echo -n "Initializing postgres DB..."
       /usr/bin/java -Dport=8600 $PG_OPTS -jar ${LIB_DIR}/okapi-core-fat.jar initdatabase > /dev/null 2>&1
       retval=$?
       if [ $retval -eq 0 ]; then 
          echo " OK"
       else
          echo " Unable to initialize Postgres DB for Okapi."  
          echo "To initialize database run:"
          echo "java -Dport=8600 -Dstorage=postgres -jar ${LIB_DIR}/okapi-core-fat.jar initdatabase"
          DB_INIT=false
       fi
    fi
        
    # initial installation.  configure systemd and start okapi
    if command -v systemctl >/dev/null; then
        echo "Configuring Okapi service..."
        systemctl enable okapi.service
        systemctl daemon-reload
        if [ "$DB_INIT" = "true" ]; then 
           echo -n "Starting Okapi..."       
           systemctl start okapi.service || true
           echo " OK"
        else 
           echo "Unable to initialize Postgres DB for Okapi."  
           echo "To initialize database run:"
           echo "   java -Dport=8600 -Dstorage=postgres -jar ${LIB_DIR}/okapi-core-fat.jar initdatabase"
           echo "and start Okapi:"
           echo "    systemctl start okapi.service"
           echo ""
        fi
    fi

elif [ "$RESTART_ON_UPGRADE" = "true" ]; then
    # okapi upgrade and RESTART_ON_UPGRADE="true"
    echo -n "Restarting okapi service..."
    if command -v systemctl >/dev/null; then
        systemctl daemon-reload
        systemctl restart okapi.service || true
        echo " OK"
    fi
else 
    # okapi upgrade and RESTART_ON_UPGRADE is false or not set.
    echo "Okapi upgraded but not restarted. To restart Okapi:"
    echo "   sudo systemctl daemon-reload"
    echo "   sudo systemctl restart okapi.service" 
    echo ""
fi

exit 0

